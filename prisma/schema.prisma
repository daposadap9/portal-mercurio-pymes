// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Transaction {
  id             String   @id @default(uuid())
  userId         String
  software       Json?
  custodia       Json?
  digitalizacion Json?
  total          Float
  discount       Float
  state          String
  createdAt      DateTime @default(now())
}
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id        String         @id @default(uuid())
  name      String         // Ej: "Software", "Custodia", "Digitalizaci√≥n"
  icon      String?        // Nombre del icono que quieras usar (ej: "FaLaptopCode")
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  options   ServiceOption[]
}

model ServiceOption {
  id        String   @id @default(uuid())
  label     String   // Ej: "1 usuario", "5 usuarios"
  value     Float
  startup   Float?   // solo para algunos servicios, ej. software
  serviceId String
  service   Service  @relation(fields: [serviceId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}